{"ast":null,"code":"import _asyncToGenerator from \"E:/bethy/new/13-02-2023/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __rest } from \"tslib\";\nimport Swal from 'sweetalert2';\nimport { Subject } from 'rxjs';\nimport { SnotifyPosition } from 'ng-snotify';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ng-snotify\";\nexport class CustomFunctions {\n  constructor(translate, router, snotify) {\n    this.translate = translate;\n    this.router = router;\n    this.snotify = snotify; // tslint:disable-next-line:variable-name\n\n    this._onDestroy = new Subject();\n    this.style = 'material';\n    this.title = 'Snotify title!';\n    this.body = 'Lorem ipsum dolor sit amet!';\n    this.timeout = 3000;\n    this.position = SnotifyPosition.centerTop;\n    this.progressBar = true;\n    this.closeClick = true;\n    this.newTop = true;\n    this.filterDuplicates = false;\n    this.backdrop = -1;\n    this.dockMax = 8;\n    this.blockMax = 6;\n    this.pauseHover = true;\n    this.titleMaxLength = 15;\n    this.bodyMaxLength = 80;\n  }\n\n  IsRTL() {\n    if (this.translate.currentLang === 'ar') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  formatDate(date) {\n    if (date) {\n      const d = new Date(date);\n      let month = '' + (d.getMonth() + 1);\n      let day = '' + d.getDate();\n      const year = d.getFullYear();\n\n      if (month.length < 2) {\n        month = '0' + month;\n      }\n\n      if (day.length < 2) {\n        day = '0' + day;\n      }\n\n      return [year, month, day].join('-');\n    } else {\n      return null;\n    }\n  }\n\n  translateText(TextAr, textEn) {\n    if (this.translate.currentLang === 'ar') {\n      return TextAr;\n    } else {\n      return textEn;\n    }\n  }\n\n  customConfirm(title, callback) {\n    Swal.fire({\n      title,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: ' Confirm Process',\n      cancelButtonText: 'back'\n    }).then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (result) {\n        if (result.value) {\n          callback();\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          Swal.fire('Cancelled', '   Back Done ', 'error');\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  getConfig() {\n    this.snotify.setDefaults({\n      global: {\n        newOnTop: this.newTop,\n        maxAtPosition: this.blockMax,\n        maxOnScreen: this.dockMax,\n        // @ts-ignore\n        filterDuplicates: this.filterDuplicates\n      }\n    });\n    return {\n      bodyMaxLength: this.bodyMaxLength,\n      titleMaxLength: this.titleMaxLength,\n      backdrop: this.backdrop,\n      position: this.position,\n      timeout: this.timeout,\n      showProgressBar: this.progressBar,\n      closeOnClick: this.closeClick,\n      pauseOnHover: this.pauseHover\n    };\n  }\n\n  onSuccess() {\n    this.snotify.success(this.body, this.title, this.getConfig());\n  }\n\n  onInfo() {\n    this.snotify.info(this.body, this.title, this.getConfig());\n  }\n\n  onError() {\n    this.snotify.error(this.body, this.title, this.getConfig());\n  }\n\n  onWarning() {\n    this.snotify.warning(this.body, this.title, this.getConfig());\n  }\n\n  showResponseMessage(msg, status = null) {\n    let Title = 'Success';\n    let TitleError = 'Error';\n\n    if (status > 300 || status === false) {\n      this.snotify.error(msg, TitleError, this.getConfig());\n    } else if (status === 'warning' || status === 'warn') {\n      this.snotify.warning(msg, TitleError, this.getConfig());\n    } else if (status === 'info') {\n      this.snotify.info(msg, Title, this.getConfig());\n    } else {\n      this.snotify.success(msg, Title, this.getConfig());\n\n      const _a = this.getConfig(),\n            {\n        timeout\n      } = _a,\n            config = __rest(_a, [\"timeout\"]); // Omit timeout\n      // this.snotify.async(msg, successAction, config);\n\n    }\n  }\n\n  reloadComponent() {\n    const currentUrl = this.router.url;\n\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n\n    this.router.onSameUrlNavigation = 'reload';\n    this.router.navigate([currentUrl]);\n  }\n\n  formatDate2(date) {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n\n    if (day.length < 2) {\n      day = '0' + day;\n    }\n\n    return [year, month, day].join('-');\n  }\n\n}\n\nCustomFunctions.ɵfac = function CustomFunctions_Factory(t) {\n  return new (t || CustomFunctions)(i0.ɵɵinject(i1.TranslateService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.SnotifyService));\n};\n\nCustomFunctions.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomFunctions,\n  factory: CustomFunctions.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["E:\\bethy\\new\\13-02-2023\\src\\app\\shared\\customFunctions\\customFunctions.ts"],"names":[],"mappings":"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","sourcesContent":["import Swal from 'sweetalert2';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SnotifyService, SnotifyPosition, SnotifyToastConfig } from 'ng-snotify';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomFunctions {\r\n  // tslint:disable-next-line:variable-name\r\n  protected _onDestroy = new Subject<void>();\r\n  style = 'material';\r\n  title = 'Snotify title!';\r\n  body = 'Lorem ipsum dolor sit amet!';\r\n  timeout = 3000;\r\n  position: SnotifyPosition = SnotifyPosition.centerTop;\r\n  progressBar = true;\r\n  closeClick = true;\r\n  newTop = true;\r\n  filterDuplicates = false;\r\n  backdrop = -1;\r\n  dockMax = 8;\r\n  blockMax = 6;\r\n  pauseHover = true;\r\n  titleMaxLength = 15;\r\n  bodyMaxLength = 80;\r\n\r\n  constructor(\r\n    public translate: TranslateService,\r\n    private router: Router,\r\n    private snotify: SnotifyService) { }\r\n\r\n  public IsRTL(): boolean {\r\n    if (this.translate.currentLang === 'ar') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  public formatDate(date: string) {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      let month = '' + (d.getMonth() + 1);\r\n      let day = '' + d.getDate();\r\n      const year = d.getFullYear();\r\n      if (month.length < 2) { month = '0' + month; }\r\n      if (day.length < 2) { day = '0' + day; }\r\n      return [year, month, day].join('-');\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n  public translateText(TextAr: string, textEn: string): string {\r\n    if (this.translate.currentLang === 'ar') {\r\n      return TextAr;\r\n    } else {\r\n      return textEn;\r\n    }\r\n  }\r\n\r\n\r\n  public customConfirm(title: string, callback: () => void): void {\r\n    Swal.fire({\r\n      title,\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: ' Confirm Process',\r\n      cancelButtonText: 'back'\r\n    }).then(async (result) => {\r\n      if (result.value) {\r\n        callback();\r\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n        Swal.fire(\r\n          'Cancelled',\r\n          '   Back Done ',\r\n          'error'\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getConfig(): SnotifyToastConfig {\r\n    this.snotify.setDefaults({\r\n      global: {\r\n        newOnTop: this.newTop,\r\n        maxAtPosition: this.blockMax,\r\n        maxOnScreen: this.dockMax,\r\n        // @ts-ignore\r\n        filterDuplicates: this.filterDuplicates\r\n      }\r\n    });\r\n    return {\r\n      bodyMaxLength: this.bodyMaxLength,\r\n      titleMaxLength: this.titleMaxLength,\r\n      backdrop: this.backdrop,\r\n      position: this.position,\r\n      timeout: this.timeout,\r\n      showProgressBar: this.progressBar,\r\n      closeOnClick: this.closeClick,\r\n      pauseOnHover: this.pauseHover\r\n    };\r\n  }\r\n\r\n  onSuccess(): void {\r\n    this.snotify.success(this.body, this.title, this.getConfig());\r\n  }\r\n  onInfo(): void {\r\n    this.snotify.info(this.body, this.title, this.getConfig());\r\n  }\r\n  onError(): void {\r\n    this.snotify.error(this.body, this.title, this.getConfig());\r\n  }\r\n  onWarning(): void {\r\n    this.snotify.warning(this.body, this.title, this.getConfig());\r\n  }\r\n  public showResponseMessage(msg: string, status: any = null): void {\r\n    let Title = 'Success';\r\n    let TitleError = 'Error';\r\n\r\n\r\n    if (status > 300 || status === false) {\r\n      this.snotify.error(msg, TitleError, this.getConfig());\r\n    } else if (status === 'warning' || status === 'warn') {\r\n      this.snotify.warning(msg, TitleError, this.getConfig());\r\n    } else if (status === 'info') {\r\n      this.snotify.info(msg, Title, this.getConfig());\r\n    } else {\r\n      this.snotify.success(msg, Title, this.getConfig());\r\n      const { timeout, ...config } = this.getConfig(); // Omit timeout\r\n      // this.snotify.async(msg, successAction, config);\r\n\r\n    }\r\n  }\r\n\r\n\r\n  public reloadComponent(): void {\r\n    const currentUrl = this.router.url;\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    this.router.onSameUrlNavigation = 'reload';\r\n    this.router.navigate([currentUrl]);\r\n  }\r\n  public formatDate2(date: any): any {\r\n\r\n    const d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    const year = d.getFullYear();\r\n\r\n    if (month.length < 2) {\r\n      month = '0' + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}