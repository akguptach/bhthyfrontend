{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/custom.service\";\nimport * as i2 from \"src/app/shared/customFunctions/customFunctions\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport let ConfirmEmailComponent = /*#__PURE__*/(() => {\n  class ConfirmEmailComponent {\n    constructor(customService, _customFunctions, router, activatedRoute, _formBuilder) {\n      this.customService = customService;\n      this._customFunctions = _customFunctions;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this._formBuilder = _formBuilder;\n    }\n\n    ngOnInit() {\n      this.activatedRoute.queryParams.subscribe(params => {\n        console.log(params); // { order: \"popular\" }\n\n        if (params) {\n          this.userId = params.userId;\n          this.token = params.token;\n          this.confirmEmail();\n        } // popular\n\n      });\n    }\n\n    confirmEmail() {\n      const user = {\n        userId: this.userId,\n        token: this.token\n      };\n      console.log(user);\n      this.customService.post(user, 'Identity/ConfirmEmail').subscribe(res => {\n        console.log('res ', res);\n\n        if (Number(res.code) > 300) {\n          this._customFunctions.showResponseMessage(res.message, false);\n        } else {\n          this._customFunctions.showResponseMessage(res.message, true);\n\n          this.router.navigate(['/account/login']);\n        }\n      });\n    }\n\n  }\n\n  ConfirmEmailComponent.ɵfac = function ConfirmEmailComponent_Factory(t) {\n    return new (t || ConfirmEmailComponent)(i0.ɵɵdirectiveInject(i1.CustomService), i0.ɵɵdirectiveInject(i2.CustomFunctions), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n\n  ConfirmEmailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfirmEmailComponent,\n    selectors: [[\"app-confirmEmail\"]],\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"pt-90\"], [1, \"container\"], [1, \"row\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-6\", \"col-sm-12\", \"col-12\", \"offset-md-3\"], [1, \"card\", \"shadow-sm\"], [1, \"card-body\"]],\n    template: function ConfirmEmailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  /**\r\n   * Confirm password validator\r\n   *\r\n   * @param {AbstractControl} control\r\n   * @returns {ValidationErrors | null}\r\n   */\n\n  return ConfirmEmailComponent;\n})();\nexport const confirmPasswordValidator = control => {\n  if (!control.parent || !control) {\n    return null;\n  }\n\n  const password = control.parent.get('password');\n  const passwordConfirm = control.parent.get('passwordConfirm');\n\n  if (!password || !passwordConfirm) {\n    return null;\n  }\n\n  if (passwordConfirm.value === '') {\n    return null;\n  }\n\n  if (password.value === passwordConfirm.value) {\n    return null;\n  }\n\n  return {\n    passwordsNotMatching: true\n  };\n};","map":null,"metadata":{},"sourceType":"module"}