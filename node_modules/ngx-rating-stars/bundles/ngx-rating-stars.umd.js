(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser')) :
    typeof define === 'function' && define.amd ? define('ngx-rating-stars', ['exports', '@angular/core', '@angular/platform-browser'], factory) :
    (global = global || self, factory(global['ngx-rating-stars'] = {}, global.ng.core, global.ng.platformBrowser));
}(this, (function (exports, core, platformBrowser) { 'use strict';

    var NgxRatingStarsComponent = /** @class */ (function () {
        function NgxRatingStarsComponent() {
            this.showRatingInNumericFormat = false;
            this.yellowStar = "/assets/images/" + "yellow-star.jpg";
            this.midStar = "/assets/images/" + "mid-star.jpg";
            this.greyStar = "/assets/images/" + "grey-star.jpg";
            this.ratingArray = new Array;
        }
        NgxRatingStarsComponent.prototype.ngOnInit = function () {
            this.buildRatingsStars();
        };
        // builds the array that shows the stars
        NgxRatingStarsComponent.prototype.buildRatingsStars = function () {
            var ratingArray = new Array;
            if (this.rating.value == 0) {
                for (var k = 0; k <= 4; k++) {
                    ratingArray[k] = this.greyStar;
                }
                this.ratingArray = ratingArray;
            }
            else {
                var rating = this.rating.value;
                var trunc = Math.trunc(rating);
                for (var j = 0; j < trunc + 1; j++) {
                    if (rating > j && rating < j + 1) {
                        ratingArray[j] = this.midStar;
                    }
                    else {
                        if (j != trunc) {
                            ratingArray[j] = this.yellowStar;
                        }
                    }
                }
                if (rating == Math.floor(rating)) {
                    for (var k = trunc; k <= 4; k++) {
                        ratingArray[k] = this.greyStar;
                    }
                }
                else {
                    for (var k = trunc + 1; k <= 4; k++) {
                        ratingArray[k] = this.greyStar;
                    }
                }
                this.ratingArray = ratingArray;
            }
        };
        return NgxRatingStarsComponent;
    }());
    NgxRatingStarsComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'ngx-rating-stars',
                    template: "\n        <div class=\"rating-star\" *ngFor=\"let star of ratingArray\"><img [ngStyle]=\"style.starsStyle\" src=\"{{star}}\"></div>\n        <div class=\"rating-values\" [ngStyle]=\"style.ratingStyle\"></div>\n        <p *ngIf=\"showRatingInNumericFormat\">{{rating?.value | number:'1.1-1'}}</p> \n        <p [ngStyle]=\"style.countStyle\">({{rating?.count}})</p>\n    ",
                    styles: ["img{height:auto;width:27px}.rating-star,.rating-values,p{display:inline}"]
                },] }
    ];
    NgxRatingStarsComponent.propDecorators = {
        rating: [{ type: core.Input }],
        style: [{ type: core.Input }],
        showRatingInNumericFormat: [{ type: core.Input }]
    };

    var NgxRatingStarsModule = /** @class */ (function () {
        function NgxRatingStarsModule() {
        }
        return NgxRatingStarsModule;
    }());
    NgxRatingStarsModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [NgxRatingStarsComponent],
                    imports: [platformBrowser.BrowserModule
                    ],
                    exports: [NgxRatingStarsComponent]
                },] }
    ];

    /*
     * Public API Surface of ngx-rating-stars
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NgxRatingStarsComponent = NgxRatingStarsComponent;
    exports.NgxRatingStarsModule = NgxRatingStarsModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-rating-stars.umd.js.map
